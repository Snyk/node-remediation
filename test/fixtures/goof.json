{"ok":false,"vulnerabilities":[{"title":"Regular Expression Denial of Service","credit":["Adam Baldwin"],"creationTime":"2016-01-19T23:24:51.834Z","modificationTime":"2016-01-19T23:24:51.834Z","publicationTime":"2016-01-19T23:24:51.834Z","description":"## Overview\nA [Regular expression Denial of Service (ReDoS)](https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS) vulnerability exists in `hawk` package, affecting version 4.1.0 and below.\n\n\"The Regular expression Denial of Service (ReDoS) is a Denial of Service attack, that exploits the fact that most Regular Expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). An attacker can then cause a program using a Regular Expression to enter these extreme situations and then hang for a very long time.\" [1](https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS)\n\n## References\n- https://github.com/hueniverse/hawk/issues/168\n- https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS\n","semver":{"vulnerable":"<=3.1.2 || >= 4.0.0 <4.1.1","unaffected":">3.1.2 < 4.0.0 || >=4.1.1"},"CVSSv3":"","severity":"low","identifiers":{"CWE":["CWE-400"],"CVE":[],"NSP":77},"patches":[{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/hawk/20160119/hawk_20160119_0_0_0833f99ba64558525995a7e21d4093da1f3e15fa.patch"],"version":"<4.1.1 >=4.0.0","modificationTime":"2016-01-20T12:51:35.396Z","comments":[],"id":"patch:npm:hawk:20160119:0"},{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/hawk/20160119/hawk_20160119_0_1_0833f99ba64558525995a7e21d4093da1f3e15fa.patch"],"version":"<4.0.0 >=3.0.0","modificationTime":"2016-01-20T12:51:35.396Z","comments":[],"id":"patch:npm:hawk:20160119:1"}],"moduleName":"hawk","disclosureTime":"2016-01-19T21:51:35.396Z","id":"npm:hawk:20160119","from":["goof@snyk/goof","tap@5.7.2","codecov.io@0.1.6","request@2.42.0","hawk@1.1.1"],"upgradePath":[false,false,false,"request@2.59.0","hawk@3.1.3"],"version":"1.1.1","name":"hawk","isUpgradable":false,"isPatchable":false},{"title":"Content & Code Injection (XSS)","credit":["Matt Austin"],"creationTime":"2016-04-20T14:45:19.556Z","modificationTime":"2016-04-20T14:45:19.556Z","publicationTime":"2016-04-20T14:45:19.556Z","description":"## Overview\n[marked](https://www.npmjs.com/package/marked) is a markdown parser and compiler used for rendering markdown content to html. It is vulnerable to content injection attack allowing the attacker to bypass its output sanitization (`sanitize: true`) protection. Using the [HTML Coded Character Set](https://www.w3.org/MarkUp/html-spec/html-spec_13.html#SEC13), attackers can inject `javascript:` code snippets into the output. For example, the following input `javascript&#x58document;alert&#40;1&#41;`  will result in `alert(1)` being executed when the user clicks on the link.\n\n## Remediation\nThereâ€™s no official fix available yet, but you can patch the vulnerability using [Snyk wizard](https://snyk.io/docs/using-snyk/#wizard). Alternatively you can use `remarkable` or other markdown libraries.\n\n## References\n- https://github.com/chjj/marked/pull/592\n- https://github.com/chjj/marked/pull/592/commits/2cff85979be8e7a026a9aca35542c470cf5da523\n\n","semver":{"vulnerable":"<=0.3.5","unaffected":"<0.0.0"},"CVSSv3":"","severity":"high","identifiers":{"CWE":["CWE-94"],"CVE":[],"NSP":101},"patches":[{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/marked/20150520/marked_20150520_0_0_2cff85979be8e7a026a9aca35542c470cf5da523.patch"],"version":"<=0.3.5 >0.3.3","modificationTime":"2016-05-09T22:33:12.000Z","comments":[],"id":"patch:npm:marked:20150520:0"},{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/marked/20150520/marked_20150520_0_1_2cff85979be8e7a026a9aca35542c470cf5da523_20140131-1.patch"],"version":"=0.3.3","modificationTime":"2016-05-09T22:33:12.000Z","comments":["includes 20140131-1"],"id":"patch:npm:marked:20150520:1"},{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/marked/20150520/marked_20150520_0_2_2cff85979be8e7a026a9aca35542c470cf5da523_20140131-1-2.patch"],"version":"<=0.3.2 >0.3.0","modificationTime":"2016-05-09T22:33:12.000Z","comments":["includes 20140131-1, 20140131-2"],"id":"patch:npm:marked:20150520:2"}],"moduleName":"marked","disclosureTime":"2015-05-20T16:45:00.000Z","id":"npm:marked:20150520","from":["goof@snyk/goof","marked@0.3.5"],"upgradePath":[],"version":"0.3.5","name":"marked","isUpgradable":false,"isPatchable":true},{"title":"Remote Memory Exposure","credit":["ChALkeR"],"creationTime":"2016-01-23T12:00:05.158Z","modificationTime":"2016-01-23T12:00:05.158Z","publicationTime":"2016-01-23T12:00:05.158Z","description":"## Overview\nA potential memory disclosure vulnerability exists in mongoose.\nA `Buffer` field in a MongoDB document can be used to expose sensitive\ninformation such as code, runtime memory and user data into MongoDB.\n\n### Details\nInitializing a `Buffer` field in a document with integer `N` creates a `Buffer`\nof length `N` with non zero-ed out memory.\n**Example:**\n```\nvar x = new Buffer(100); // uninitialized Buffer of length 100\n// vs\nvar x = new Buffer('100'); // initialized Buffer with value of '100'\n```\nInitializing a MongoDB document field in such manner will dump uninitialized\nmemory into MongoDB.\nThe patch wraps `Buffer` field initialization in mongoose by converting a\n`number` value `N` to array `[N]`, initializing the `Buffer` with `N` in its\nbinary form.\n\n#### Proof of concept\n```javascript\nvar mongoose = require('mongoose');\nmongoose.connect('mongodb://localhost/bufftest');\n\n// data: Buffer is not uncommon, taken straight from the docs: http://mongoosejs.com/docs/schematypes.html\nmongoose.model('Item', new mongoose.Schema({id: String, data: Buffer}));\n\nvar Item = mongoose.model('Item');\n\nvar sample = new Item();\nsample.id = 'item1';\n\n// This will create an uninitialized buffer of size 100\nsample.data = 100;\nsample.save(function () {\n    Item.findOne(function (err, result) {\n        // Print out the data (exposed memory)\n        console.log(result.data.toString('ascii'))\n        mongoose.connection.db.dropDatabase(); // Clean up everything\n        process.exit();\n    });\n});\n```\n\n## Remediation\nUpgrade `mongoose` to version >= 3.8.39 or >= 4.3.6.\n\nIf a direct dependency update is not possible, use [`snyk wizard`](https://snyk.io/docs/using-snyk#wizard) to patch this vulnerability.\n\n## References\n- https://github.com/Automattic/mongoose/issues/3764\n- https://github.com/ChALkeR/notes/blob/master/Lets-fix-Buffer-API.md#previous-materials\n- https://github.com/ChALkeR/notes/blob/master/Buffer-knows-everything.md\n","semver":{"vulnerable":"<3.8.39 >=3.5.5 || <4.3.6 >=4.0.0","unaffected":"<3.5.5"},"CVSSv3":"","severity":"medium","identifiers":{"CWE":["CWE-201"],"CVE":[]},"patches":[{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/mongoose/20160116/20160116_0_0_mongoose_8066b145c07984c8b7e56dbb51721c0a3d48e18a.patch"],"version":"<4.3.6 >=4.1.2","modificationTime":"2016-01-23T12:00:05.158Z","comments":[],"id":"patch:npm:mongoose:20160116:0"},{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/mongoose/20160116/20160116_0_1_mongoose_8066b145c07984c8b7e56dbb51721c0a3d48e18a.patch"],"version":"<4.1.2 >=4.0.0","modificationTime":"2016-01-23T12:00:05.158Z","comments":[],"id":"patch:npm:mongoose:20160116:1"},{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/mongoose/20160116/20160116_0_3_mongoose_2ff7d36c5e52270211b17f3a84c8a47c6f4d8c1f.patch"],"version":"<3.8.39 >=3.6.11","modificationTime":"2016-01-23T12:00:05.158Z","comments":[],"id":"patch:npm:mongoose:20160116:2"},{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/mongoose/20160116/20160116_0_5_mongoose_2ff7d36c5e52270211b17f3a84c8a47c6f4d8c1f.patch"],"version":"=3.6.11","modificationTime":"2016-01-23T12:00:05.158Z","comments":[],"id":"patch:npm:mongoose:20160116:3"},{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/mongoose/20160116/20160116_0_4_mongoose_2ff7d36c5e52270211b17f3a84c8a47c6f4d8c1f.patch"],"version":"<3.6.10 >=3.5.5","modificationTime":"2016-01-23T12:00:05.158Z","comments":[],"id":"patch:npm:mongoose:20160116:4"}],"moduleName":"mongoose","disclosureTime":"2016-01-23T12:00:05.158Z","id":"npm:mongoose:20160116","from":["goof@snyk/goof","mongoose@4.2.4"],"upgradePath":[false,"mongoose@4.3.6"],"version":"4.2.4","name":"mongoose","isUpgradable":true,"isPatchable":true},{"title":"Regular Expression Denial of Service","credit":["Adam Baldwin"],"creationTime":"2015-11-06T02:09:36.187Z","modificationTime":"2015-11-06T02:09:36.187Z","publicationTime":"2015-11-06T02:09:36.187Z","description":"## Overview\n\nThe [Regular expression Denial of Service (ReDoS)](https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS) vulnerability exists in the `ms` package, affecting version 0.7.0 and below.\n\n## Details\n\n`ms` is a milliseconds conversion utility, used to convert a time period string (i.e. `\"2 days\"`, `\"1h\"`) into milliseconds integer.\nThe regular expression used by the function to parse the time is vulnerable to a denial of service attack, where extremely long strings passed to `ms()` can take a long time to process, subsequently blocking the event loop for that extended period.\n\n\"The Regular expression Denial of Service (ReDoS) is a Denial of Service attack, that exploits the fact that most Regular Expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). An attacker can then cause a program using a Regular Expression to enter these extreme situations and then hang for a very long time.\" [1](https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS)\n\n## Remediation\nUpgrade `ms` to version 0.7.1. \n\nIf direct dependency upgrade is not possible, use [snyk wizard](https://snyk.io/docs/using-snyk#wizard) to patch this vulnerability.\n\n## References\n- https://nodesecurity.io/advisories/46\n- https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS\n","semver":{"vulnerable":"<=0.7.0","unaffected":">0.7.0"},"CVSSv3":"","severity":"low","identifiers":{"CWE":["CWE-400"],"CVE":[],"NSP":46},"patches":[{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/ms/20151024/ms_20151024_0_0_48701f029417faf65e6f5e0b61a3cebe5436b07b.patch"],"version":"=0.7.0","modificationTime":"2015-10-24T20:39:59.852Z","comments":[],"id":"patch:npm:ms:20151024:0"},{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/ms/20151024/ms_20151024_1_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk.patch"],"version":"<0.7.0 >=0.6.0","modificationTime":"2015-10-24T20:39:59.852Z","comments":[],"id":"patch:npm:ms:20151024:1"},{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/ms/20151024/ms_20151024_2_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk2.patch"],"version":"<0.6.0 >0.3.0","modificationTime":"2015-10-24T20:39:59.852Z","comments":[],"id":"patch:npm:ms:20151024:2"},{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/ms/20151024/ms_20151024_3_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk3.patch"],"version":"=0.3.0","modificationTime":"2015-10-24T20:39:59.852Z","comments":[],"id":"patch:npm:ms:20151024:3"},{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/ms/20151024/ms_20151024_4_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk4.patch"],"version":"=0.2.0","modificationTime":"2015-10-24T20:39:59.852Z","comments":[],"id":"patch:npm:ms:20151024:4"},{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/ms/20151024/ms_20151024_5_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk5.patch"],"version":"=0.1.0","modificationTime":"2015-10-24T20:39:59.852Z","comments":[],"id":"patch:npm:ms:20151024:5"}],"moduleName":"ms","disclosureTime":"2015-10-24T20:39:59.852Z","id":"npm:ms:20151024","from":["goof@snyk/goof","humanize-ms@1.0.1","ms@0.6.2"],"upgradePath":[false,"humanize-ms@1.0.2","ms@0.7.1"],"version":"0.6.2","name":"ms","isUpgradable":true,"isPatchable":true},{"title":"Remote Memory Exposure","credit":["Feross Aboukhadijeh"],"creationTime":"2016-03-22T12:00:05.158Z","modificationTime":"2016-03-22T12:00:05.158Z","publicationTime":"2016-03-22T12:00:05.158Z","description":"## Overview\nA potential remote memory exposure vulnerability exists in `request`. If a `request` uses a multipart attachment and the _body type_ option is `number` with value X, then X bytes of uninitialized memory will be sent in the body of the request.\n\nNote that while the impact of this vulnerability is high (memory exposure), exploiting it is likely difficult, as the attacker needs to somehow control the body type of the request. One potential exploit scenario is when a request is composed based on JSON input, including the body type, allowing a malicious JSON to trigger the memory leak.\n\n### Details\nConstructing a `Buffer` class with integer `N` creates a `Buffer`\nof length `N` with non zero-ed out memory.\n**Example:**\n```\nvar x = new Buffer(100); // uninitialized Buffer of length 100\n// vs\nvar x = new Buffer('100'); // initialized Buffer with value of '100'\n```\n\nInitializing a multipart body in such manner will cause uninitialized memory to be sent in the body of the request.\n\n#### Proof of concept\n```javascript\nvar http = require('http')\nvar request = require('request')\n\nhttp.createServer(function (req, res) {\n  var data = ''\n  req.setEncoding('utf8')\n  req.on('data', function (chunk) {\n    console.log('data')\n    data += chunk\n  })\n  req.on('end', function () {\n    // this will print uninitialized memory from the client\n    console.log('Client sent:\\n', data)\n  })\n  res.end()\n}).listen(8000)\n\nrequest({\n  method: 'POST',\n  uri: 'http://localhost:8000',\n  multipart: [{ body: 1000 }]\n},\nfunction (err, res, body) {\n  if (err) return console.error('upload failed:', err)\n  console.log('sent')\n})\n```\n\n## Remediation\nUpgrade `request` to version 2.68.0 or higher.\n\nIf a direct dependency update is not possible, use [`snyk wizard`](https://snyk.io/documentation/#wizard) to patch this vulnerability.\n\n## References\n- https://github.com/request/request/pull/2018\n- https://github.com/ChALkeR/notes/blob/master/Lets-fix-Buffer-API.md#previous-materials\n- https://github.com/ChALkeR/notes/blob/master/Buffer-knows-everything.md\n","semver":{"vulnerable":"<2.68.0 >2.2.5","unaffected":">=2.68.0 <=2.2.6"},"CVSSv3":"","severity":"medium","identifiers":{"CWE":["CWE-201"],"CVE":[]},"patches":[{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/request/20160119/request_20160119_0_0_3d31d4526fa4d4e4f59b89cabe194fb671063cdb.patch"],"version":"<2.68.0 >=2.54.0","modificationTime":"2016-03-22T12:00:05.158Z","comments":[],"id":"patch:npm:request:20160119:0"},{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/request/20160119/request_20160119_0_1_3d31d4526fa4d4e4f59b89cabe194fb671063cdb.patch"],"version":"<2.54.0 >2.51.0","modificationTime":"2016-03-22T12:00:05.158Z","comments":[],"id":"patch:npm:request:20160119:1"},{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/request/20160119/request_20160119_0_2_3d31d4526fa4d4e4f59b89cabe194fb671063cdb.patch"],"version":"<=2.51.0 >2.47.0","modificationTime":"2016-03-22T12:00:05.158Z","comments":[],"id":"patch:npm:request:20160119:2"},{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/request/20160119/request_20160119_0_3_3d31d4526fa4d4e4f59b89cabe194fb671063cdb.patch"],"version":"=2.47.0","modificationTime":"2016-03-27T12:00:05.158Z","comments":[],"id":"patch:npm:request:20160119:3"},{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/request/20160119/request_20160119_0_4_3d31d4526fa4d4e4f59b89cabe194fb671063cdb.patch"],"version":"<2.47.0 >=2.27.0","modificationTime":"2016-03-27T12:00:05.158Z","comments":[],"id":"patch:npm:request:20160119:4"},{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/request/20160119/request_20160119_0_5_3d31d4526fa4d4e4f59b89cabe194fb671063cdb.patch"],"version":"<2.27.0 >=2.16.0","modificationTime":"2016-03-27T12:00:05.158Z","comments":[],"id":"patch:npm:request:20160119:5"},{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/request/20160119/request_20160119_0_6_3d31d4526fa4d4e4f59b89cabe194fb671063cdb.patch"],"version":"<2.16.0 >=2.9.150","modificationTime":"2016-03-27T12:00:05.158Z","comments":[],"id":"patch:npm:request:20160119:6"},{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/request/20160119/request_20160119_0_7_3d31d4526fa4d4e4f59b89cabe194fb671063cdb.patch"],"version":"<2.9.150 >=2.9.3","modificationTime":"2016-03-27T12:00:05.158Z","comments":[],"id":"patch:npm:request:20160119:7"},{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/request/20160119/request_20160119_0_8_3d31d4526fa4d4e4f59b89cabe194fb671063cdb.patch"],"version":"<2.9.3 >=2.2.6","modificationTime":"2016-03-27T12:00:05.158Z","comments":[],"id":"patch:npm:request:20160119:8"}],"moduleName":"request","disclosureTime":"2016-01-19T04:57:05.158Z","id":"npm:request:20160119","from":["goof@snyk/goof","tap@5.7.2","codecov.io@0.1.6","request@2.42.0"],"upgradePath":[false,false,false,"request@2.68.0"],"version":"2.42.0","name":"request","isUpgradable":false,"isPatchable":true},{"title":"Remote Memory Exposure","credit":["Feross Aboukhadijeh"],"creationTime":"2016-03-22T12:00:05.158Z","modificationTime":"2016-03-22T12:00:05.158Z","publicationTime":"2016-03-22T12:00:05.158Z","description":"## Overview\nA potential remote memory exposure vulnerability exists in `request`. If a `request` uses a multipart attachment and the _body type_ option is `number` with value X, then X bytes of uninitialized memory will be sent in the body of the request.\n\nNote that while the impact of this vulnerability is high (memory exposure), exploiting it is likely difficult, as the attacker needs to somehow control the body type of the request. One potential exploit scenario is when a request is composed based on JSON input, including the body type, allowing a malicious JSON to trigger the memory leak.\n\n### Details\nConstructing a `Buffer` class with integer `N` creates a `Buffer`\nof length `N` with non zero-ed out memory.\n**Example:**\n```\nvar x = new Buffer(100); // uninitialized Buffer of length 100\n// vs\nvar x = new Buffer('100'); // initialized Buffer with value of '100'\n```\n\nInitializing a multipart body in such manner will cause uninitialized memory to be sent in the body of the request.\n\n#### Proof of concept\n```javascript\nvar http = require('http')\nvar request = require('request')\n\nhttp.createServer(function (req, res) {\n  var data = ''\n  req.setEncoding('utf8')\n  req.on('data', function (chunk) {\n    console.log('data')\n    data += chunk\n  })\n  req.on('end', function () {\n    // this will print uninitialized memory from the client\n    console.log('Client sent:\\n', data)\n  })\n  res.end()\n}).listen(8000)\n\nrequest({\n  method: 'POST',\n  uri: 'http://localhost:8000',\n  multipart: [{ body: 1000 }]\n},\nfunction (err, res, body) {\n  if (err) return console.error('upload failed:', err)\n  console.log('sent')\n})\n```\n\n## Remediation\nUpgrade `request` to version 2.68.0 or higher.\n\nIf a direct dependency update is not possible, use [`snyk wizard`](https://snyk.io/documentation/#wizard) to patch this vulnerability.\n\n## References\n- https://github.com/request/request/pull/2018\n- https://github.com/ChALkeR/notes/blob/master/Lets-fix-Buffer-API.md#previous-materials\n- https://github.com/ChALkeR/notes/blob/master/Buffer-knows-everything.md\n","semver":{"vulnerable":"<2.68.0 >2.2.5","unaffected":">=2.68.0 <=2.2.6"},"CVSSv3":"","severity":"medium","identifiers":{"CWE":["CWE-201"],"CVE":[]},"patches":[{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/request/20160119/request_20160119_0_0_3d31d4526fa4d4e4f59b89cabe194fb671063cdb.patch"],"version":"<2.68.0 >=2.54.0","modificationTime":"2016-03-22T12:00:05.158Z","comments":[],"id":"patch:npm:request:20160119:0"},{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/request/20160119/request_20160119_0_1_3d31d4526fa4d4e4f59b89cabe194fb671063cdb.patch"],"version":"<2.54.0 >2.51.0","modificationTime":"2016-03-22T12:00:05.158Z","comments":[],"id":"patch:npm:request:20160119:1"},{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/request/20160119/request_20160119_0_2_3d31d4526fa4d4e4f59b89cabe194fb671063cdb.patch"],"version":"<=2.51.0 >2.47.0","modificationTime":"2016-03-22T12:00:05.158Z","comments":[],"id":"patch:npm:request:20160119:2"},{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/request/20160119/request_20160119_0_3_3d31d4526fa4d4e4f59b89cabe194fb671063cdb.patch"],"version":"=2.47.0","modificationTime":"2016-03-27T12:00:05.158Z","comments":[],"id":"patch:npm:request:20160119:3"},{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/request/20160119/request_20160119_0_4_3d31d4526fa4d4e4f59b89cabe194fb671063cdb.patch"],"version":"<2.47.0 >=2.27.0","modificationTime":"2016-03-27T12:00:05.158Z","comments":[],"id":"patch:npm:request:20160119:4"},{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/request/20160119/request_20160119_0_5_3d31d4526fa4d4e4f59b89cabe194fb671063cdb.patch"],"version":"<2.27.0 >=2.16.0","modificationTime":"2016-03-27T12:00:05.158Z","comments":[],"id":"patch:npm:request:20160119:5"},{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/request/20160119/request_20160119_0_6_3d31d4526fa4d4e4f59b89cabe194fb671063cdb.patch"],"version":"<2.16.0 >=2.9.150","modificationTime":"2016-03-27T12:00:05.158Z","comments":[],"id":"patch:npm:request:20160119:6"},{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/request/20160119/request_20160119_0_7_3d31d4526fa4d4e4f59b89cabe194fb671063cdb.patch"],"version":"<2.9.150 >=2.9.3","modificationTime":"2016-03-27T12:00:05.158Z","comments":[],"id":"patch:npm:request:20160119:7"},{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/request/20160119/request_20160119_0_8_3d31d4526fa4d4e4f59b89cabe194fb671063cdb.patch"],"version":"<2.9.3 >=2.2.6","modificationTime":"2016-03-27T12:00:05.158Z","comments":[],"id":"patch:npm:request:20160119:8"}],"moduleName":"request","disclosureTime":"2016-01-19T04:57:05.158Z","id":"npm:request:20160119","from":["goof@snyk/goof","tap@5.7.2","coveralls@2.11.9","request@2.67.0"],"upgradePath":[false,false,false,"request@2.68.0"],"version":"2.67.0","name":"request","isUpgradable":false,"isPatchable":true},{"title":"semver Regular Expression Denial of Service","credit":["Adam Baldwin"],"description":"## Overview\nThe semver module uses regular expressions when parsing a version string. For a carefully crafted input, the time it takes to process these regular expressions is not linear to the length of the input. Since the semver module did not enforce a limit on the version string length, an attacker could provide a long string that would take up a large amount of resources, potentially taking a server down. This issue therefore enables a potential Denial of Service attack. This is a slightly differnt variant of a typical Regular Expression Denial of Service ([ReDoS](https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS)) vulnerability.\n\n## Remediation\nUpdate to a version 4.3.2 or greater. From the issue description [2]: \"Package version can no longer be more than 256 characters long. This prevents a situation in which parsing the version number can use exponentially more time and memory to parse, leading to a potential denial of service.\"\n\n## References\n- https://nodesecurity.io/advisories/31\n- [1] https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS\n- [2] https://github.com/npm/npm/releases/tag/v2.7.5\n","semver":{"vulnerable":"<4.3.2","unaffected":">=4.3.2"},"CVSSv3":"","severity":"medium","identifiers":{"CWE":["CWE-400"],"CVE":[],"NSP":31},"patches":[{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/semver/20150403/semver_20150403_0_0_c80180d8341a8ada0236815c29a2be59864afd70.patch"],"version":"<4.3.2 >= 2.0.2","modificationTime":"2015-04-03T16:00:00.000Z","comments":["https://github.com/npm/node-semver/commit/c80180d8341a8ada0236815c29a2be59864afd70.patch"],"id":"patch:npm:semver:20150403:0"}],"moduleName":"semver","creationTime":"2015-04-03T16:00:00.000Z","publicationTime":"2015-04-03T16:00:00.000Z","modificationTime":"2015-11-06T02:09:36.180Z","disclosureTime":"2015-04-03T16:00:00.000Z","id":"npm:semver:20150403","from":["goof@snyk/goof","npmconf@0.0.24","semver@1.1.4"],"upgradePath":[false,"npmconf@2.0.9","semver@4.3.2"],"version":"1.1.4","name":"semver","isUpgradable":true,"isPatchable":false},{"title":"Directory Traversal","credit":["Charlie Somerville"],"description":"## Overview\nVersions prior to 0.2.5 did not properly prevent path traversal. Literal dots in a path were resolved out, but url encoded dots were not. Thus, a request like ``` /%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd ``` would leak sensitive files and data from the server.\n\nAs of version 0.2.5, any ```'/../'``` in the request path, urlencoded or not, will be replaced with ```'/'```. If your application depends on url traversal, then you are encouraged to please refactor so that you do not depend on having ```..``` in url paths, as this tends to expose data that you may be surprised to be exposing.\n\n## Remediation\nUpgrade to version 0.2.5 or greater.\n\n## References\n- https://github.com/isaacs/st#security-status\n- http://blog.npmjs.org/post/80277229932/newly-paranoid-maintainers","semver":{"vulnerable":"<0.2.5","unaffected":">=0.2.5"},"CVSSv3":"","severity":"high","identifiers":{"CWE":["CWE-22"],"CVE":["CVE-2014-3744"],"NSP":36},"patches":[{"urls":["https://raw.githubusercontent.com/Snyk/vulndb/snapshots/master/patches/npm/st/20140206/st-20140206_0_0_6b54ce2d2fb912eadd31e2c25c65456d2c8666e1.patch"],"version":"<0.2.5 >0.1.4","modificationTime":"2016-02-17T12:50:48.000Z","comments":[],"id":"patch:npm:st:20140206:0"}],"moduleName":"st","creationTime":"2014-02-06T07:33:48.000Z","publicationTime":"2014-02-06T07:33:48.000Z","modificationTime":"2015-11-06T02:09:36.180Z","disclosureTime":"2014-02-06T07:33:48.000Z","id":"npm:st:20140206","from":["goof@snyk/goof","st@0.2.4"],"upgradePath":[false,"st@0.2.5"],"version":"0.2.4","name":"st","isUpgradable":true,"isPatchable":true}],"numDependencies":447,"summary":"8 vulnerable pats"}